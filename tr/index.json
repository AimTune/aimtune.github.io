[{"content":"Elixir Nedir? #Elixir, fonksiyonel, eş zamanlı (concurrent) ve dağıtık programlama (distributed programming) için tasarlanmış, dinamik ve güçlü bir programlama dilidir. Elixir, özellikle yüksek performanslı, ölçeklenebilir (scalable) ve hata toleranslı (fault tolerance) sistemler geliştirmek için idealdir.1 2\nElixir, Erlang sanal makinesi (BEAM) üzerinde çalışır ve bu sayede güçlü concurrency (eşzamanlılık) özelliklerine sahiptir. Erlang (Ericsson Language), 1980\u0026rsquo;lerde Ericsson tarafından telekomünikasyon sistemleri için geliştirildi ve BEAM sanal makinesi, bu yüksek talepli sistemlerin gereksinimlerini karşılamak için optimize edildi.\nErlang ve Elixir HelloWorld Örnekleri #Erlang #-module(helloworld). -export([say_hello/0]). say_hello() -\u0026gt; io:format(\u0026#34;Hello, World!~n\u0026#34;). Elixir #defmodule HelloWorld do def say_hello do IO.puts(\u0026#34;Hello, World!\u0026#34;) end end HelloWorld.say_hello() Not: Elixir, aslında HelloWorld örneğinde olduğu gibi daha uzun değil, aksine daha kısa yazılabiliyor ve okunabilirlik konusunda da daha iyi. Temel Özellikler # Fonksiyonel Programlama: Elixir, fonksiyonel programlamayı destekler ve immutable (değişemeyen) veri yapıları ile çalışır. Bu, daha güvenli ve öngörülebilir kod yazmanızı sağlar. Örneğin aşağıda map, filter gibi fonksiyonlar zincir şeklinde birbirini pipe(|) işareti ile çağırıyolar ve her biri çıktısını bir sonraki fonksiyona girdi olarak veriyor: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 defmodule MyList do def process_list(list) do list |\u0026gt; Enum.map(\u0026amp;(\u0026amp;1 + 1)) |\u0026gt; Enum.filter(\u0026amp;rem(\u0026amp;1, 2) == 0) |\u0026gt; Enum.map(\u0026amp;(\u0026amp;1 * \u0026amp;1)) |\u0026gt; Enum.sum() end end # Kullanım list = [1, 2, 3, 4, 5] result = MyList.process_list(list) IO.puts(\u0026#34;Sonuç: #{result}\u0026#34;) Eş Zamanlı (Concurrent) ve Dağıtık Sistemler: Elixir, aynı anda birçok işlemi (process) verimli bir şekilde yürütebilir ve dağıtık sistemlerde mükemmel performans sergiler. Erlang VM (BEAM) üzerine inşa edildiği için bu özellikleri doğal olarak sunar. Erlang VM (BEAM): Elixir, Erlang sanal makinesi (BEAM) üzerinde çalışır ve bu sayede Erlang’ın sağlam ve hata toleransı özelliklerinden yararlanır. BEAM, hafif süreçleri (process) ve mesaj geçişini (message passing) destekleyen bir yapı sunar. Bu süreçler, işletim sistemi iş parçacıklarından çok daha hafif olup, binlerce hatta milyonlarca sürecin aynı anda çalıştırılmasını mümkün kılar. Erlang Scheduler, bu hafif süreçleri etkin bir şekilde yönetir ve her bir CPU çekirdeği için bir scheduler thread çalıştırır. Scheduler, süreçlerin adil bir şekilde çalıştırılmasını sağlar ve yüksek verimli bir yük dengeleme mekanizması sunar. Bu özellikler sayesinde, Elixir ile yazılan uygulamalar yüksek eşzamanlılık ve düşük gecikme süreleriyle mükemmel performans sergiler.\nPhoto by How to build fault-tolerant software systems Üretkenlik ve Bakım Kolaylığı: Modern dil özellikleri ve zengin standart kütüphaneleri ile Elixir, geliştiricilerin üretkenliğini artırır ve kodun bakımını kolaylaştırır. Hata Toleransı: Elixir, hata yönetimi konusunda güçlüdür ve sistemlerin kesintisiz çalışmasını sağlamak için “let it crash”3 felsefesini benimser bu da sistemlerin hata durumlarında hızlı bir şekilde toparlanmasını sağlar. 4 Ölçeklenebilirlik (Scalability): Elixir, yüksek ölçeklenebilirlik sunar ve aynı anda milyonlarca işlemi yönetebilir. Güvenilirlik (Reliability): Elixir, sağlam yapısı ve hata toleransı ile güvenilir sistemler geliştirmeyi sağlar. Dağıtık Sistemler (Distribution): Elixir, dağıtık sistemlerde mükemmel performans sergiler ve kolayca ölçeklendirilebilir. Hızlı Yanıt Verme (Responsiveness): Elixir, kullanıcılarınıza anında yanıt verebilen hızlı ve verimli sistemler oluşturmanıza imkan tanır. Canlı Güncellemeler (Live Update): Elixir, uygulamalarınızı kesinti olmadan güncelleyebilmenizi (deployment) sağlar. Yüksek Erişilebilirlik (High Availability): Elixir, yüksek erişilebilirlik gerektiren uygulamalarda mükemmel performans sunar. OTP ve GenServer: Elixir, yüksek performanslı, dağıtık ve hata toleranslı uygulamalar geliştirmek için kullanılan OTP (Open Telecom Platform) adlı bir kütüphane ve araç seti ile birlikte gelir. OTP\u0026rsquo;nin temel yapı taşlarından biri olan GenServer, süreçlerin yaşam döngüsünü ve mesajlaşmasını yönetir. GenServer, belirli işlevleri gerçekleştirmek ve durum bilgisi tutmak için kullanılır, bu da karmaşık iş mantıklarının kolayca yönetilmesini sağlar. Hex Paket Yöneticisi ve Mix: Hex, Elixir ve Erlang projeleri için kullanılan bir paket yöneticisidir. Hex, bağımlılıkları yönetmeyi, paylaşmayı ve Elixir kütüphanelerini kolayca yüklemeyi sağlar. Mix ise Elixir projelerini oluşturmak, derlemek, test etmek ve yönetmek için kullanılan güçlü bir araçtır. Mix, bağımlılık yönetimi, uygulama yapılandırması ve görev otomasyonu gibi işlevleri sağlar. Makrolar: Makrolar, Elixir\u0026rsquo;de kodunuzu derleme zamanında dönüştürmenizi ve genişletmenizi sağlayan güçlü araçlardır. Makrolar, kodunuzu daha dinamik ve esnek hale getirmenizi sağlar. Elixir\u0026rsquo;de makrolar defmacro anahtar kelimesi ile tanımlanır. Örneğin aşağıdaki örnekte5 Ecto kütüphanesiyle .NET\u0026rsquo;teki LINQ yapısına benzer bir sorgulama makrolar sayesinde yapılabilmiş. 1 2 3 4 5 6 7 8 9 10 # Imports only from/2 of Ecto.Query import Ecto.Query, only: [from: 2] # Create a query query = from u in \u0026#34;users\u0026#34;, where: u.age \u0026gt; 18, select: u.name # Send the query to the repository Repo.all(query) Kullanım Alanları #Erlang, özellikle telekomünikasyon sektöründe yüksek erişilebilirlik ve güvenilirlik gerektiren sistemlerde uzun yıllardır kullanılmaktadır. Ericsson, WhatsApp, Facebook ve RabbitMQ gibi büyük şirketler, yüksek performanslı ve dağıtık sistemlerini yönetmek için Erlang kullanmaktadır.6 Ayrıca Elixir\u0026rsquo;i de PEPSICO, Discord, Change.org, Heroku gibi firmalar kullanmaktadır.7 Elixir de Erlang temelli olduğundan çeşitli alanlarda kullanılabilir.\nÖrneğin:\nWeb Geliştirme: Phoenix framework ile birlikte kullanılarak yüksek performanslı web uygulamaları geliştirilebilir. Dağıtık Sistemler: Yüksek erişilebilirlik ve düşük gecikme süreleri gerektiren sistemlerde idealdir. Gerçek Zamanlı Uygulamalar: Anlık mesajlaşma, oyun sunucuları ve IoT uygulamaları gibi gerçek zamanlı sistemlerde kullanılır. Elixir, Erlang\u0026rsquo;ın güçlü yönlerini modern bir sözdizimi ve geliştirme deneyimi ile birleştirerek geliştiricilere sunar. Bu nedenle, Elixir telekomünikasyon, finans, sağlık ve e-ticaret gibi sektörlerde yüksek ölçeklenebilirlik ve düşük gecikme süreleri gerektiren uygulamalar için ideal bir seçimdir.\nElixir Kurulum Rehberi #Elixir programlama dilini bilgisayarınıza kurmak için aşağıdaki adımları takip edebilirsiniz. İşletim sisteminize göre farklı kurulum yöntemleri mevcuttur.\nMacOS Üzerine Elixir Kurulumu # Homebrew Paket Yöneticisini Kurun (Eğer Homebrew yüklü değilse): /bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; Elixir\u0026rsquo;i Homebrew ile Kurun: brew install elixir Ubuntu/Linux Üzerine Elixir Kurulumu # Paket Yöneticisini Güncelleyin: sudo apt-get update Elixir\u0026rsquo;i Kurun: sudo apt-get install erlang elixir Windows Üzerine Elixir Kurulumu # Erlang/OTP\u0026rsquo;yi İndirin ve Kurun:\nErlang/OTP İndir Elixir\u0026rsquo;i İndirin ve Kurun:\nElixir İndir Not: Ayrıca Windows\u0026rsquo;ta Elixir\u0026rsquo;i winget, choco gibi paket yöneticileriyle de kolay bir şekilde kurabilirsiniz. Kurulum Sonrası Kontroller #Elixir\u0026rsquo;in doğru bir şekilde kurulduğunu doğrulamak için terminal veya komut istemcisinde elixir -v komutunu çalıştırabilirsiniz. Bu komut Elixir\u0026rsquo;in kurulu olduğunu ve sürüm numarasını gösterecektir.\nelixir -v Çıktısı:\nErlang/OTP 24 [erts-12.2.1] [source] [64-bit] [smp:20:20] [ds:20:20:10] [async-threads:1] [jit] Elixir 1.12.2 (compiled with Erlang/OTP 24) Şimdi kurulumu başarılı bir şekilde yaptığımıza göre interaktif terminalini tanıyalım ve temel bilgileri öğrenmeye başlayalım.\nIEx Nedir ve Nasıl Kullanılır? #IEx (Interactive Elixir), Elixir kodlarını interaktif olarak çalıştırabileceğiniz bir kabuktur(shell). IEx, Elixir dilini öğrenmek ve hızlı bir şekilde kod denemeleri yapmak için ideal bir araçtır.\nIEx\u0026rsquo;in Temel Özellikleri # Interaktif Çalışma Ortamı: Elixir kodlarını doğrudan yazıp çalıştırabilirsiniz. Anında Geri Bildirim: Yazdığınız kodun çıktısını hemen görebilirsiniz. Gelişmiş Yardım Sistemi: Elixir modülleri ve fonksiyonları hakkında anında yardım alabilirsiniz. Gelişmiş Debugging ve Profiling: Kodunuzu adım adım çalıştırabilir ve performans analizleri yapabilirsiniz. IEx Nasıl Kullanılır? #IEx\u0026rsquo;i Başlatma #IEx’i başlatmak için terminal veya komut istemcisinde iex komutunu yazmanız yeterlidir:\niex Sizi şöyle bir ekran karşılayacaktır:\nErlang/OTP 24 [erts-12.2.1] [source] [64-bit] [smp:20:20] [ds:20:20:10] [async-threads:1] [jit] Interactive Elixir (1.12.2) - press Ctrl+C to exit (type h() ENTER for help) iex(1)\u0026gt; Örneğin bir toplama işlemi yapalım ve sonucunu alalım. #Erlang/OTP 24 [erts-12.2.1] [source] [64-bit] [smp:20:20] [ds:20:20:10] [async-threads:1] [jit] Interactive Elixir (1.12.2) - press Ctrl+C to exit (type h() ENTER for help) iex(1)\u0026gt; 1+1 2 iex(2)\u0026gt; Yardım Alma #IEx, Elixir modülleri ve fonksiyonları hakkında yardım almanızı sağlar. Yardım almak için h komutunu kullanabilirsiniz. Örneğin IO.puts fonksiyonu hakkında bilgi alalım:\niex(2)\u0026gt; h IO.puts def puts(device \\\\ :stdio, item) @spec puts(device(), chardata() | String.Chars.t()) :: :ok Writes item to the given device, similar to write/2, but adds a newline at the end. By default, the device is the standard output. It returns :ok if it succeeds. ## Examples IO.puts(\u0026#34;Hello World!\u0026#34;) #=\u0026gt; Hello World! IO.puts(:stderr, \u0026#34;error\u0026#34;) #=\u0026gt; error iex(3)\u0026gt; IEx\u0026rsquo;den Çıkma #IEx kabuğundan çıkmak için aşağıdaki yöntemleri kullanabilirsiniz:\nCTRL+C Tuş Kombinasyonu: İki kez CTRL+C tuş kombinasyonunu uygulayın.\nSystem.halt/0 Fonksiyonu: System.halt() fonksiyonunu çalıştırın.\niex\u0026gt; System.halt() Not: \u0026rsquo;/0\u0026rsquo; bu fonksiyonun parametresiz halini kullanabileceğimizi göstermektedir. Parametre sayısına göre slash işaretinin yanındaki sayı değişebilir. Daha fazla özelliğe farklı bölümlerde ayrıca değineceğiz şimdilik temeller için bunları bilmek yeterli olacaktır.\nElixir in Action Second Edition by Saša Jurić\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nChatGPT\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nLet It Crash\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nErlang “Let it Crash” Approach to Building Reliable Services\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nEcto.Query\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nWho uses Erlang for product development?\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nCompanies using Elixir in production\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"30 Temmuz 2024","permalink":"/tr/series/elixir/1-temel-elixir-bilgisi/","section":"Seriler","summary":"Bu yazımızda, Elixir programlama dilinin temel özelliklerine odaklanıyoruz. Fonksiyonel programlama yaklaşımını benimseyen Elixir, dağıtık sistemler ve yüksek performanslı uygulamalar geliştirmek için ideal bir dil olarak dikkat çekiyor. Erlang VM üzerinde çalışarak hata toleransı, ölçeklenebilirlik ve yüksek hız sunan Elixir, modern yazılım geliştirme süreçlerinde önemli bir rol üstleniyor. Yeni başlayanlar için Elixir\u0026rsquo;in temel bilgilerini ve kurulum adımlarını detaylıca ele alıyoruz.","title":"1 - Elixir nedir? Nasıl Kurulur ve Kullanılır"},{"content":"","date":null,"permalink":"/tr/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tr/tags/elixir/","section":"Tags","summary":"","title":"Elixir"},{"content":" Bu serimizde Elixir dili hakkında yaptığım araştırmalar ve sonucunda aldığım notları aktarmaya çalıştım. ","date":null,"permalink":"/tr/series/elixir/","section":"Seriler","summary":"Bu serimizde Elixir dili hakkında yaptığım araştırmalar ve sonucunda aldığım notları aktarmaya çalıştım.","title":"Elixir"},{"content":"","date":null,"permalink":"/tr/categories/elixir-serisi/","section":"Categories","summary":"","title":"Elixir-Serisi"},{"content":"","date":null,"permalink":"/tr/tags/erlang/","section":"Tags","summary":"","title":"Erlang"},{"content":"","date":null,"permalink":"/tr/","section":"Hamza Ağar","summary":"","title":"Hamza Ağar"},{"content":"","date":null,"permalink":"/tr/tags/index/","section":"Tags","summary":"","title":"Index"},{"content":"","date":null,"permalink":"/tr/series/","section":"Seriler","summary":"","title":"Seriler"},{"content":"","date":null,"permalink":"/tr/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/tr/topics/cross-cutting-concerns/","section":"Topics","summary":"","title":"Cross Cutting Concerns"},{"content":"","date":null,"permalink":"/tr/topics/dapr/","section":"Topics","summary":"","title":"Dapr"},{"content":" Dapr #(Distributed Application Runtime)\nDapr\u0026rsquo;a Giriş #Dapr, mikroservis tabanlı uygulamaların geliştirilmesini ve çalıştırılmasını kolaylaştıran, open-source bir sidecar ürünüdür.\nSidecar Pattern Nedir? #Sidecar Pattern, yardımcı bir bileşenin (sidecar) ana uygulamaya eklenmesiyle (container veya process), uygulamanın iş mantığına müdahale etmeden ortak görevlerin yürütülmesini sağlar. Güvenlik, logging ve dinamik yapılandırma gibi cross cutting concerns\u0026rsquo;leri yönetmek için idealdir.\nCross Cutting Concerns Nedir? #Cross cutting concerns, yazılım sisteminde birçok modül veya katmanda ortak olan ve tekrarlanan fonksiyonel özelliklerdir. Güvenlik, logging, hata yönetimi, performans izleme gibi konular bu kapsamda değerlendirilir. Bunlar, sistemin bakımını ve genişletilebilirliğini artırır.\nSidecar Pattern\u0026rsquo;in Avantajları # Yardımcı hizmetleri izole eder. Uygulamanın modülerliğini ve yeniden kullanılabilirliğini artırır. Yönetimi ve bakımı kolaylaştırır. Örnek Sidecar: Resiliency (Dayanıklılık) # Resiliency, bir sistemin hatalardan kurtulma ve hizmet vermeye devam etme yeteneğidir. Sidecar kullanarak bir mikroservise resiliency özellikleri\neklemek, özellikle ağ hataları veya diğer geçici sorunlar durumunda hizmet sürekliliğini sağlamak için etkilidir. Bu sidecar, otomatik yeniden deneme\n(retry), devre kesici (circuit breaker) ve zaman aşımı (timeout) gibi dayanıklılık desenlerini uygular. Örnek Sidecar: Resiliency (Dayanıklılık) # Bizler de sidecar\u0026rsquo;larda örneği uygulamamıza gelen trafiği sadece sidecar üstünden alabiliriz ve gelen istekleri sidecar içerisinde resiliency görevi\ngörecek kodlardan geçiririz ve uygulamamızın ayakta olmadığı durumda resiliency policy\u0026rsquo;lerine göre tekrar istek atma veya istek durdurma sürecine geçer. Dapr\u0026rsquo;ın Amacı ve Faydaları # Uygulama mantığını değiştirmeden dağıtılmış sistemlerin yaygın ihtiyaçlarını karşılamak için çeşitli yapı taşları (building blocks) ve birçok farklı özellik sunar. HTTP ve gRPC protokolleri üzerinden çalışarak çoklu programlama dilleriyle uyumluluk sunar. Kolay programlayabilmek için birçok farklı dilde SDK\u0026rsquo;ları vardır. Dapr\u0026rsquo;ın Temel Bileşenleri # Service Invocation* # State Management* # Secrets Management* # Configuration* # Dapr\u0026rsquo;ın Temel Bileşenleri # Pub/Sub Messaging # Bindings # Distributed lock # Cryptography # Actors # Workflow # Dapr\u0026rsquo;ın Diğer Özellikleri #\nResiliency* #Hata toleransı sağlamak için zaman aşımı, yeniden deneme, devre kesici ve geri çekilme gibi politikalar tanımlamayı ve uygulamayı destekler.\nDapr\u0026rsquo;ın Diğer Özellikleri #\nObservability #Open Telemetry ve Zipkin gibi protokollerle izleme verilerini toplar ve birçok gözlemlenebilirlik aracıyla entegrasyon sağlar.\nDapr\u0026rsquo;ın Diğer Özellikleri #\nSecurity #Varsayılan olarak etkin güvenlik özellikleri sunar, API\u0026rsquo;lar, servisler ve bileşenler için uygulamaya özel politikalar ayarlama imkanı sağlar. İletişim mTLS ile otomatik olarak şifrelenir.\nService Invocation # Mikroservisler arası iletişim sağlar. HTTP veya gRPC ile çalışır. Servis keşfi ve yük dengeleme özellikleri içerir. Servislerdeki iletişimde araya girdiği için security, resiliency, observability gibi yapıları da bu istekler çalıştığı anda uygulayabilir. State Management #Uygulamalarda durum (state) kalıcılığı sağlar.\nKey/value tabanlı durum depolamada görev alır.\nFarklı ürünler ile entegre edilebilir (Redis, MongoDB, SQLs*, In-Memory, etcd, vb…).\nState Management # apiVersion: dapr.io/v1alpha1 kind: Component metadata: name: statestore apiVersion: dapr.io/v1alpha1 kind: Component metadata: name: statestore Secrets Management #Güvenlik açısından hassas bilgilerin korunmasını sağlar.\nŞifreler, API anahtarları, güvenlik sertifikaları gibi gizli bilgilerin yönetimini içerir.\nErişim kontrolü ve şifreleme kullanılarak güvenli bir şekilde saklanır ve erişilir.\nFarklı ürünler ile entegre edilebilir (Azure Key Vault, AWS Secrets Manager, HashiCorp Vault, vb.).\nSecrets Management # apiVersion: dapr.io/v1alpha1 kind: Component metadata: name: statestore apiVersion: dapr.io/v1alpha1 kind: Component metadata: name: statestore Configuration Management #Uygulamanın çalışma şeklini belirleyen ayarların yönetimini sağlar.\nUygulama ayarları, çevresel değişkenler ve yapılandırma dosyalarını içerir.\nUygulama yeniden başlatılmadan veya kod değiştirilmeden kolayca güncellenebilir.\nFarklı ürünler ile entegre edilebilir (Redis, Consul, Kubernetes ConfigMaps, Azure App Configuration vb.).\nConfiguration Management # apiVersion: dapr.io/v1alpha1 kind: Component metadata: name: statestore apiVersion: dapr.io/v1alpha1 kind: Component metadata: name: statestore Demo # You found the speaker notes! Dinlediğiniz için teşekkürler #Kaynaklar: dapr.io - ChatGPT\nÖrnekler Reposu: aimtune/dapr-examples\n","date":"28 Temmuz 2024","permalink":"/tr/presentations/dapr-series/dapr-1/","section":"Sunumlar","summary":"Bu sunumda modern mikroservis mimarileri için güçlü bir sidecar aracı olan \u003cstrong\u003eDapr\u003c/strong\u003e\u0026lsquo;ı (Distributed Application Runtime) keşfedeceğiz. Sunumda değinilecek Dapr konuları: \u003cstrong\u003eService Invocation\u003c/strong\u003e (Servis Çağırma), \u003cstrong\u003eState Management\u003c/strong\u003e (Durum Yönetimi), Secrets Management (Gizli Veri Yönetimi), \u003cstrong\u003eConfiguration\u003c/strong\u003e (Yapılandırma), \u003cstrong\u003eResiliency\u003c/strong\u003e (Dayanıklılık).","title":"Dapr Bölüm 1"},{"content":"","date":null,"permalink":"/tr/topics/javascript/","section":"Topics","summary":"","title":"JavaScript"},{"content":"","date":null,"permalink":"/tr/topics/kubernetes/","section":"Topics","summary":"","title":"Kubernetes"},{"content":"","date":null,"permalink":"/tr/topics/mikroservisler/","section":"Topics","summary":"","title":"Mikroservisler"},{"content":"","date":null,"permalink":"/tr/topics/node.js/","section":"Topics","summary":"","title":"Node.js"},{"content":"","date":null,"permalink":"/tr/topics/redis/","section":"Topics","summary":"","title":"Redis"},{"content":"","date":null,"permalink":"/tr/topics/sidecar-pattern/","section":"Topics","summary":"","title":"Sidecar Pattern"},{"content":"","date":null,"permalink":"/tr/topics/","section":"Topics","summary":"","title":"Topics"},{"content":"","date":null,"permalink":"/tr/tags/css/","section":"Tags","summary":"","title":"Css"},{"content":"","date":null,"permalink":"/tr/tags/html/","section":"Tags","summary":"","title":"Html"},{"content":"","date":null,"permalink":"/tr/tags/markdown/","section":"Tags","summary":"","title":"Markdown"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings #The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 #H2 #H3 #H4 #H5 #H6 #Paragraph #Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes #The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution # Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\nBlockquote with attribution # Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables #Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables # Inline Markdown In Table italics bold strikethrough code Code Blocks #Code block with backticks #html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces #\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode #\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types #Ordered List # First item Second item Third item Unordered List # List item Another item And another item Nested list # Item First Sub-item Second Sub-item Other Elements — abbr, sub, sup, kbd, mark #GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 Aralık 2019","permalink":"/tr/about/","section":"Hamza Ağar","summary":"\u003cp\u003eThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide"},{"content":"DENEME\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings #The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 #H2 #H3 #H4 #H5 #H6 #Paragraph #Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes #The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution # Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\nBlockquote with attribution # Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables #Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables # Inline Markdown In Table italics bold strikethrough code Code Blocks #Code block with backticks #html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces #\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode #\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types #Ordered List # First item Second item Third item Unordered List # List item Another item And another item Nested list # Item First Sub-item Second Sub-item Other Elements — abbr, sub, sup, kbd, mark #GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"20 Aralık 2019","permalink":"/tr/posts/markdown-syntax/","section":"Yazılar","summary":"\u003cp\u003eDENEME\u003cbr /\u003e\nThis article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\u003c/p\u003e","title":"Markdown Syntax Guide"},{"content":"","date":null,"permalink":"/tr/categories/syntax/","section":"Categories","summary":"","title":"Syntax"},{"content":"","date":null,"permalink":"/tr/tags/themes/","section":"Tags","summary":"","title":"Themes"},{"content":"","date":null,"permalink":"/tr/categories/themes/","section":"Categories","summary":"","title":"Themes"},{"content":"","date":null,"permalink":"/tr/posts/","section":"Yazılar","summary":"","title":"Yazılar"},{"content":"","date":null,"permalink":"/tr/presentations/","section":"Sunumlar","summary":"","title":"Sunumlar"}]